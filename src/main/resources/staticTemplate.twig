{% import "macros.twig" as macros %}
package {{ package }};

import com.querydsl.core.types.dsl.*;
import com.querydsl.sql.*;
import pl.exsio.querydsl.entityql.*;
import pl.exsio.querydsl.entityql.path.*;
import pl.exsio.querydsl.entityql.type.*;
import com.querydsl.core.types.Path;

public final class {{ className }} extends QBase<{{entityName}}> {

    public static final {{ className }} INSTANCE = new {{ className }}();

    {% for name, path in q.columns %}
        public final {{macros.printColumnType(path)}} {{ name }};
    {% endfor %}

    {% for name, fk in q.joinColumns %}
        public final {{macros.printJoinColumnType(fk)}} {{ name }};
    {% endfor %}

    public final PrimaryKey<{{entityName}}> _primaryKey;

    public {{ className }}() {
       this("{{ q.tableName }}");
    }

    @SuppressWarnings(value = "unchecked")
    public {{ className }}(String variable) {
        super({{entityName}}, variable, "{{q.schemaName }}", "{{ q.tableName }}");

        {% for name, path in q.columns %}
        {{name}}: {
            this.{{name}} = (({{macros.printColumnType(path)}}) QPathFactory.create(this, new QPathConfig({{macros.printOriginalType(path)}},{{path.config.fieldType.name}}.class,"{{path.config.name}}",{{path.config.nullable}},{{path.config.idx}},{{path.config.sqlType}})).get());
            addMetadata(this.{{name}}, QColumnMetadataFactory.create("{{path.config.name}}",{{path.config.idx}},{{path.config.sqlType}},{{path.config.nullable}}));
        }
        {% endfor %}

        {% for name, fk in q.joinColumns %}

            {% if (fk.getPaths().size() > 1) %}
            {{name}}: {
                List<Path> paths = new ArrayList();
                List<Path> foreignColumnNames = new ArrayList();
                {% for fkPath in fk.getPaths().keySet() %}
                    Path<?> {{name}}{{loop.index0}}  = QPathFactory.create(this, new QPathConfig({{macros.printOriginalType(fkPath)}},{{fkPath.config.fieldType.name}}.class,"{{fkPath.config.name}}",{{fkPath.config.nullable}},{{fkPath.config.idx}},{{fkPath.config.sqlType}})).get();
                    addMetadata({{name}}{{loop.index0}}, QColumnMetadataFactory.create("{{fkPath.config.name}}",{{fkPath.config.idx}},{{fkPath.config.sqlType}},{{fkPath.config.nullable}}));
                    paths.add({{name}}{{loop.index0}});
                {% endfor %}
                {% for fcName in fk.foreignColumnNames %}
                    foreignColumnNames.add("{{fcName}}");
                {% endfor %}
                this.{{name}} = (({{macros.printJoinColumnType(fk)}}) createForeignKey(paths, foreignColumnNames));
            }
            {% else %}
            {{name}}: {
                this.{{name}} = (({{macros.printJoinColumnType(fk)}}) createForeignKey(this.{{name}}Id, "{{fk.foreignColumnNames.first()}}"));
            }
            {% endif %}

        {% endfor %}

        _primaryKey: {
         List<Path> paths = new ArrayList();
         {% for id in q.idColumns %}
                     paths.add(this.{{id.field.name}});
         {% endfor %}
         this._primaryKey = ((PrimaryKey<{{entityName}}>) createPrimaryKey(paths.toArray(new Path[0])));
        }
    }
}
