package pl.exsio.querydsl.entityql.kotlin.jpa.entity.generated

import com.querydsl.core.dml.StoreClause
import com.querydsl.core.types.Path
import com.querydsl.core.types.dsl.ArrayPath
import com.querydsl.sql.PrimaryKey
import java.util.ArrayList
import java.util.Arrays
import java.util.UUID
import javax.annotation.Generated
import pl.exsio.querydsl.entityql.QColumnMetadataFactory
import pl.exsio.querydsl.entityql.QPathConfig
import pl.exsio.querydsl.entityql.QPathFactory
import pl.exsio.querydsl.entityql.QStaticModel
import pl.exsio.querydsl.entityql.kotlin.jpa.entity.KUploadedFile
import pl.exsio.querydsl.entityql.path.QUuidPath

/**
 *
 * This class was generated by EntityQL (https://github.com/eXsio/querydsl-entityql). It is not
 * recommended to make any changes to this class. Any manual changes will be lost upon the next
 * class generation.
 */
@Generated("pl.exsio.querydsl.entityql.QExporter")
class QKUploadedFile : QStaticModel<KUploadedFile> {

  companion object {
    val instance: QKUploadedFile = QKUploadedFile()
    val qKUploadedFile: QKUploadedFile = QKUploadedFile.instance
  }

  lateinit var id: QUuidPath

  lateinit var data: ArrayPath<ByteArray, Byte>

  lateinit var _primaryKey: PrimaryKey<KUploadedFile>

  constructor() : this("UPLOADED_FILES")

  constructor(variable: String) : super(KUploadedFile::class.java, variable, "", "UPLOADED_FILES") {

    // id
    run {
      val config = QPathConfig(UUID::class.java, UUID::class.java, "FILE_ID", false, 1, 12)

      this.id = QPathFactory.create<QUuidPath>(this, config)

      addMetadata(this.id, QColumnMetadataFactory.create(config))
      this.columnsMap.put("id", this.id)
    }

    // data
    run {
      val config =
          QPathConfig(ByteArray::class.java, Array<Byte>::class.java, "DATA", false, 2, 2003)

      this.data = QPathFactory.create<ArrayPath<ByteArray, Byte>>(this, config)

      addMetadata(this.data, QColumnMetadataFactory.create(config))
      this.columnsMap.put("data", this.data)
    }

    // _primaryKey
    run {
      val list = mutableListOf<Path<*>>(this.id)

      this.primaryKeyColumns = list
      this._primaryKey = this.createPrimaryKey(*list.toTypedArray())
    }
  }
}
