package pl.exsio.querydsl.entityql.kotlin.jpa.entity.generated

import com.querydsl.core.types.Path
import com.querydsl.sql.PrimaryKey
import pl.exsio.querydsl.entityql.QColumnMetadataFactory
import pl.exsio.querydsl.entityql.QPathConfig
import pl.exsio.querydsl.entityql.QPathFactory
import pl.exsio.querydsl.entityql.QStaticModel

import com.querydsl.core.types.Path
import com.querydsl.core.dml.StoreClause

import pl.exsio.querydsl.entityql.kotlin.jpa.entity.KBook

    
    
    
     
        import com.querydsl.core.types.dsl.NumberPath
     
     

    
    
    
     
        import com.querydsl.core.types.dsl.StringPath
     
     

    
    
    
     
        import com.querydsl.core.types.dsl.StringPath
     
     

    
    
    
        import java.math.BigDecimal
    
     
        import com.querydsl.core.types.dsl.NumberPath
     
     
        import java.math.BigDecimal
    



import javax.annotation.Generated
import java.util.ArrayList
import java.util.Arrays

/**
 *
 * This class was generated by EntityQL (https://github.com/eXsio/querydsl-entityql).
 * It is not recommended to make any changes to this class.
 * Any manual changes will be lost upon the next class generation.
 *
 */
@Generated("pl.exsio.querydsl.entityql.QExporter")
class QKBook : QStaticModel<KBook> {

    companion object {
     val instance: QKBook = QKBook()
     val  qKBook: QKBook = QKBook.instance
    }

    
        
        
        lateinit var id: 
    NumberPath
    
        <Long>
    
    

    
        
        
        lateinit var name: 
    StringPath
    
    

    
        
        
        lateinit var desc: 
    StringPath
    
    

    
        
        
        lateinit var price: 
    NumberPath
    
        <BigDecimal>
    
    

    

    

    

    lateinit var _primaryKey:  PrimaryKey<KBook>

    constructor(): this("BOOKS")  {
    }

    constructor(variable: String): super(KBook::class.java, variable, "", "BOOKS") {
        
            
            
            run {
                val config = QPathConfig(
    
        Long::class.java
    
,Long::class.java,"BOOK_ID",true,1,-5)
                this.id = QPathFactory.create<
    NumberPath
    
        <Long>
    
    
>(this, config)
                addMetadata(this.id, QColumnMetadataFactory.create(config))
                this.columnsMap.put("id",this.id)
            }
        
            
            
            run {
                val config = QPathConfig(
    
        String::class.java
    
,String::class.java,"NAME",true,2,12)
                this.name = QPathFactory.create<
    StringPath
    
    
>(this, config)
                addMetadata(this.name, QColumnMetadataFactory.create(config))
                this.columnsMap.put("name",this.name)
            }
        
            
            
            run {
                val config = QPathConfig(
    
        String::class.java
    
,String::class.java,"DESC",true,3,2005)
                this.desc = QPathFactory.create<
    StringPath
    
    
>(this, config)
                addMetadata(this.desc, QColumnMetadataFactory.create(config))
                this.columnsMap.put("desc",this.desc)
            }
        
            
            
            run {
                val config = QPathConfig(
    
        BigDecimal::class.java
    
,BigDecimal::class.java,"PRICE",true,4,3)
                this.price = QPathFactory.create<
    NumberPath
    
        <BigDecimal>
    
    
>(this, config)
                addMetadata(this.price, QColumnMetadataFactory.create(config))
                this.columnsMap.put("price",this.price)
            }
        

        

        

        run {

             val list = listOf(
             
                  this.id
                  
             
             )
             this.primaryKeyColumns = list
             this._primaryKey = this.createPrimaryKey(list.toTypedArray() as Path<*>)

        }
    }
}
